name: Terraform expired

on:
  workflow_dispatch:
    inputs:
      OS:
        description:
        type: choice
        options:
          - ubuntu2204
          - ubuntu_python

env:
 ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
 ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
 ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
 ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
 TF_VAR_ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
 TF_VAR_ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
 TF_VAR_ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
 TF_VAR_ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}


jobs:
  ubuntu:
    runs-on: ubuntu-latest  # windows-latest | macos-latest
    name:  expired
    steps:
      - name: checkout
        id: checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16        

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
          
      - name: Terraform Init
        id: init
        run: |
          cd os/${{ github.event.inputs.OS }}/
          terraform init -no-color -input=false 
      - uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'
      - name: Terraform expired
        id: expired
        run: |
          os=$(az group list --tag 'expired' --query '[].id' -o tsv | awk -F/ '{print $NF}')
          cd os/${os}/
          terraform init
        continue-on-error: false
        